name: Check PR

on:
  workflow_dispatch:
  pull_request:
    branches: [master]

jobs:
  build-api:
    name: Build and scan api container image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build
        uses: docker/build-push-action@v3
        env:
          NODE_ENV: production
        with:
          push: false
          target: production
          tags: ghcr.io/podkrepi-bg/api:pr
      
      - name: Scan with Mondoo
        uses: mondoohq/actions/docker-image@main
        env:
          MONDOO_CONFIG_BASE64: ${{ secrets.MONDOO_SECRET }}
        with:
          image: ghcr.io/podkrepi-bg/api:pr

  build-maintenance:
    name: Build and scan migrations container image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build
        uses: docker/build-push-action@v3
        with:
          push: false
          file: Dockerfile.migrations
          target: base
          tags: ghcr.io/podkrepi-bg/api/migrations:pr

      - name: Scan with Mondoo
        uses: mondoohq/actions/docker-image@main
        env:
          MONDOO_CONFIG_BASE64: ${{ secrets.MONDOO_SECRET }}
        with:
          image: ghcr.io/podkrepi-bg/api/migrations:pr

  build-migrations-docker-image:
    name: Build migrations docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get sha
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=master-$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          NODE_ENV: production
        with:
          push: true
          file: Dockerfile.migrations
          target: base
          build-args: |
            APP_VERSION=${{ env.VERSION }}
          tags: |
            ghcr.io/podkrepi-bg/api/migrations:master
            ghcr.io/podkrepi-bg/api/migrations:${{ env.VERSION }}

      - name: Scan with Mondoo
        uses: mondoohq/actions/docker-image@main
        env:
          MONDOO_CONFIG_BASE64: ${{ secrets.MONDOO_SECRET }}
        with:
          image: ghcr.io/podkrepi-bg/api/migrations:${{ env.VERSION }}

  build-seed-docker-image:
    name: Build seed docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get sha
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=master-$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          NODE_ENV: production
        with:
          push: true
          file: Dockerfile.migrations
          target: seed
          tags: |
            ghcr.io/podkrepi-bg/api/seed:master
            ghcr.io/podkrepi-bg/api/seed:${{ env.VERSION }}

  scan-manifests:
    name: Scan k8s manifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Build development manifests
        run: kustomize build manifests/overlays/development > dev-manifests.yaml

      - name: Scan development manifests with Mondoo
        uses: mondoohq/actions/k8s-manifest@main
        env:
          MONDOO_CONFIG_BASE64: ${{ secrets.MONDOO_SECRET }}
        with:
          path: dev-manifests.yaml

      - name: Build production manifests
        run: kustomize build manifests/overlays/production > prod-manifests.yaml

      - name: Scan production manifests with Mondoo
        uses: mondoohq/actions/k8s-manifest@main
        env:
          MONDOO_CONFIG_BASE64: ${{ secrets.MONDOO_SECRET }}
        with:
          path: prod-manifests.yaml
